volumes:
  mysql-db-primary:
    driver: local

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: express_app
    ports:
      - 8080:8080
    environment:
      - PORT=8080
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    depends_on:
      - database
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command:
      - '/bin/sh'
      - '-c'
      - '/bin/sleep 10 && npm run dev'

  database:
    container_name: mysql-db-primary
    hostname: mysql-db-primary
    build:
      context: ./platform/images/mysql
      dockerfile: MySQL.Dockerfile
    restart: on-failure
    ports:
      - 3306:3306
    command: --authentication_policy=mysql_native_password
    environment:
      - MYSQL_HOST={MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql-db-primary:/var/lib/mysql
      - ./mysql-db-primary/migration.sql:/docker-entrypoint-initdb.d/migration.sql
      - ./platform/images/mysql/primary.conf.d/mysql.cnf:/etc/my.cnf
